dim(b)
a[a == -1] <- NA
summary(sta_util_cv)
summary(a)
a1 <- a[,grepl('svrid|mcv',names(a))]
View(a1)
summary(a1)
b <- apply(a1,1,function(x)sum(is.na(x)))
summary(b)
table(b)
a2 <- a1[b == 4,]
View(a2)
summary(a2)
a2$fn <- r_sta$fn[match(a2$svrid,r_sta$svr_id)]
table(a2$fn)
table(factor(a2$fn))
a1$fn <- r_sta$fn[match(a1$svrid,r_sta$svr_id)]
table(factor(a1$fn))
ggplot(a2,aes(x = fn)) + geom_boxplot(aes(y = xps_mcv))
ggplot(a1,aes(x = fn)) + geom_boxplot(aes(y = xps_mcv))
ggplot(a1,aes(x = util_mcv,y = xps_mcv)) + geom_point(alpha = 0.01)
ggplot(a1,aes(x = util_mcv,y = iops_mcv)) + geom_point(alpha = 0.01)
ggplot(a1,aes(x = xps_mcv,y = iops_mcv)) + geom_point(alpha = 0.01)
ggplot(a1,aes(x = iopsr_mcv,y = iopsw_mcv)) + geom_point(alpha = 0.01)
ggplot(a1,aes(x = fn,y = util_mcv)) + geom_boxplot()
ggplot(a1,aes(x = fn,y = util_mcv)) + geom_boxplot(aes(fill = gsub('\\d.*','',fn)))
ggplot(a1,aes(x = fn,y = xps_mcv)) + geom_boxplot(aes(fill = gsub('\\d.*','',fn)))
i = 44
fn <- fname[i]
load(file.path(dir_datatendcast,fn))
dt_dcast <- iops_dcast_clear(dt_dcast)
dt_dcast <- factorX(subset(dt_dcast,svrid %in% r_sta_svrid$svrid[r_sta_svrid$numDate > 200]))
1
dt_dcast <- iops_aggragate(dt_dcast)
a <- apply(2,dt_dcast[,-c(1,2)],function(x)quantile(x,seq(0,1,0.1)))
a <- apply(dt_dcast[,-c(1,2)],2,function(x)quantile(x,seq(0,1,0.1)))
a <- apply(dt_dcast[,-c(1,2)],2,function(x)quantile(x,seq(0,1,0.1),na.rm = T))
View(a)
cut_util <- c(seq(0,100,1),101)
cut_xps <- c(seq(0,1e4,1e2),1e6)
cut_iops <- cut_xps
source('~/Code/R/attrid/sta_coefficientVar.R')
source('~/Code/R/attrid/sta_coefficientVar.R')
i = 28
fn <- fname[i]
load(file.path(dir_datatendcast,fn))
dt_dcast <- iops_dcast_clear(dt_dcast)
dt_dcast <- factorX(subset(dt_dcast,svrid %in% r_sta_svrid$svrid[r_sta_svrid$numDate > 200]))
dt_dcast <- iops_aggragate(dt_dcast)
splitDD <- split(dt_dcast[,c('svrid','time','util','xps','iops','iopsr','iopsw')],factor(dt_dcast$svrid))
1+1
util_cv <- lapply(splitDD,sta_svrid_coefficientVar,fn,'util',cut_util)
sta_svrid_coefficientVar <- function(df,fn,attr,cut_attr){
cat(sprintf('file:%s\tid:%s\n',fn,df$svrid[1]))
# cut_util <- gen_cut(df$util,numCut)
# idx <- !is.na(cut_util)
# cut_util <- cut_util[idx]
# names(cut_util) <- names(quantile(1,seq(0,1,1/numCut)))[idx]
# if(length(cut_util) <= 3)return(data.frame(sum = -1,mean = -1))
# cut_x <- c(0:4,seq(5,15,5),20,50,80,seq(85,95,5),96:101)
# cut_x <- sort(unique(round(quantile(df[[attr]],seq(0,1,0.05),na.rm = T))))
# if(length(cut_x) <= 3)return(data.frame(num_vibrate = -1,mean_cv = -1, count = -1))
cut_x <- cut_attr
df$x_cut <- fct2num(cut(df$util,breaks = cut_x,labels = cut_x[-length(cut_x)],right = F))
df$time_cut <- cut.POSIXt(df$time,seq.POSIXt(min(df$time),max(df$time),by = 'weeks'))
# count <- 1
r <- do.call(rbind,tapply(df$x_cut,df$time_cut,function(x){
# cat(sprintf('%d\n',count))
# count <<- count+1
table_x <- melt(table(x))
if(nrow(table_x) == (length(cut_x)-1)){
return(t(table_x$value))
}else{
table_x <- rbind(table_x,data.frame(x = setdiff(cut_x[-length(cut_x)],table_x$x),value = 0))
table_x <- table_x[order(table_x$x),]
return(t(table_x$value))
}
}))
eva <- apply(r,2,function(x)sd(x)/mean(x))
eva[is.na(eva)] <- 0
return(data.frame(num_vibrate = sum(eva > 1),mean_cv = mean(eva), count = length(eva)))
# return(data.frame(num_vibrate = sum(eva > thred),mean_cv = mean(eva),t(round(eva,digits = 4))))
}
util_cv <- lapply(splitDD,sta_svrid_coefficientVar,fn,'util',cut_util)
xps_cv <- lapply(splitDD,sta_svrid_coefficientVar,fn,'xps',cut_xps)
iops_cv <- lapply(splitDD,sta_svrid_coefficientVar,fn,'iops',cut_iops)
iopsr_cv <- lapply(splitDD,sta_svrid_coefficientVar,fn,'iopsr',cut_iops)
iopsw_cv <- lapply(splitDD,sta_svrid_coefficientVar,fn,'iopsw',cut_iops)
r <- cbind(svrid = names(util_cv),do.call(rbind,util_cv),do.call(rbind,xps_cv),do.call(rbind,iops_cv),do.call(rbind,iopsr_cv),do.call(rbind,iopsw_cv))
View(r)
sta_svrid_coefficientVar <- function(df,fn,attr,cut_attr){
cat(sprintf('file:%s\tid:%s\n',fn,df$svrid[1]))
# cut_util <- gen_cut(df$util,numCut)
# idx <- !is.na(cut_util)
# cut_util <- cut_util[idx]
# names(cut_util) <- names(quantile(1,seq(0,1,1/numCut)))[idx]
# if(length(cut_util) <= 3)return(data.frame(sum = -1,mean = -1))
# cut_x <- c(0:4,seq(5,15,5),20,50,80,seq(85,95,5),96:101)
# cut_x <- sort(unique(round(quantile(df[[attr]],seq(0,1,0.05),na.rm = T))))
# if(length(cut_x) <= 3)return(data.frame(num_vibrate = -1,mean_cv = -1, count = -1))
cut_x <- cut_attr
df$x_cut <- fct2num(cut(df$util,breaks = cut_x,labels = cut_x[-length(cut_x)],right = F))
df$time_cut <- cut.POSIXt(df$time,seq.POSIXt(min(df$time),max(df$time),by = 'weeks'))
r <- do.call(rbind,tapply(df$x_cut,df$time_cut,function(x){
table_x <- melt(table(x))
if(nrow(table_x) == (length(cut_x)-1)){
return(t(table_x$value))
}else{
table_x <- rbind(table_x,data.frame(x = setdiff(cut_x[-length(cut_x)],table_x$x),value = 0))
table_x <- table_x[order(table_x$x),]
return(t(table_x$value))
}
}))
eva <- apply(r,2,function(x)sd(x)/mean(x))
eva[is.na(eva)] <- 0
return(data.frame(num_vibrate = sum(eva > 1),mean_cv = mean(eva), count = length(unique(df$x_cut))))
# return(data.frame(num_vibrate = sum(eva > thred),mean_cv = mean(eva),t(round(eva,digits = 4))))
}
util_cv <- lapply(splitDD,sta_svrid_coefficientVar,fn,'util',cut_util)
r <- cbind(svrid = names(util_cv),do.call(rbind,util_cv),do.call(rbind,xps_cv),do.call(rbind,iops_cv),do.call(rbind,iopsr_cv),do.call(rbind,iopsw_cv))
View(r)
sta_svrid_coefficientVar <- function(df,fn,attr,cut_attr){
cat(sprintf('file:%s\tid:%s\n',fn,df$svrid[1]))
# cut_util <- gen_cut(df$util,numCut)
# idx <- !is.na(cut_util)
# cut_util <- cut_util[idx]
# names(cut_util) <- names(quantile(1,seq(0,1,1/numCut)))[idx]
# if(length(cut_util) <= 3)return(data.frame(sum = -1,mean = -1))
# cut_x <- c(0:4,seq(5,15,5),20,50,80,seq(85,95,5),96:101)
# cut_x <- sort(unique(round(quantile(df[[attr]],seq(0,1,0.05),na.rm = T))))
# if(length(cut_x) <= 3)return(data.frame(num_vibrate = -1,mean_cv = -1, count = -1))
cut_x <- cut_attr
df$x_cut <- fct2num(cut(df$util,breaks = cut_x,labels = cut_x[-length(cut_x)],right = F))
df$time_cut <- cut.POSIXt(df$time,seq.POSIXt(min(df$time),max(df$time),by = 'weeks'))
r <- do.call(rbind,tapply(df$x_cut,df$time_cut,function(x){
table_x <- melt(table(x))
if(nrow(table_x) == (length(cut_x)-1)){
return(t(table_x$value))
}else{
table_x <- rbind(table_x,data.frame(x = setdiff(cut_x[-length(cut_x)],table_x$x),value = 0))
table_x <- table_x[order(table_x$x),]
return(t(table_x$value))
}
}))
eva <- apply(r,2,function(x)sd(x)/mean(x))
eva[is.na(eva)] <- 0
return(data.frame(vibrate_range = sum(eva > 1), valid_range = length(unique(df$x_cut)),mean_cv = mean(eva)))
# return(data.frame(num_vibrate = sum(eva > thred),mean_cv = mean(eva),t(round(eva,digits = 4))))
}
util_cv <- lapply(splitDD,sta_svrid_coefficientVar,fn,'util',cut_util)
xps_cv <- lapply(splitDD,sta_svrid_coefficientVar,fn,'xps',cut_xps)
iops_cv <- lapply(splitDD,sta_svrid_coefficientVar,fn,'iops',cut_iops)
iopsr_cv <- lapply(splitDD,sta_svrid_coefficientVar,fn,'iopsr',cut_iops)
iopsw_cv <- lapply(splitDD,sta_svrid_coefficientVar,fn,'iopsw',cut_iops)
r <- cbind(svrid = names(util_cv),do.call(rbind,util_cv),do.call(rbind,xps_cv),do.call(rbind,iops_cv),do.call(rbind,iopsr_cv),do.call(rbind,iopsw_cv))
View(r)
a <- rnorm(100,0,10)
a
b <- rnorm(100,0,1)
a <- 1:100 + rnorm(100,0,10)
b <- 1:100 + rnorm(100,0,1)
d <- data.frame(id = 1:100,a,b)
View(d)
require(ggplot2)
ggplot(d,aes(x = id)) + geom_line(aes(a)) + geom_line(aes(b))
ggplot(d,aes(x = id)) + geom_line(aes(y = a)) + geom_line(aes(y = b))
d$cut1 <- cut(d$id,seq(0,100,10),seq(0,90,10),include.lowest = F)
d$cut2 <- cut(d$id,seq(0,100,5),seq(0,95,5),include.lowest = F)
d$cut2 <- cut(d$id,seq(0,100,20),seq(0,80,20),include.lowest = F)
d$cut2 <- cut(d$id,seq(0,100,5),seq(0,95,5),include.lowest = F)
d$cut3 <- cut(d$id,seq(0,100,20),seq(0,80,20),include.lowest = F)
source('~/Code/R/attrid/sta_trend_length.R')
rm(list = ls());source('head.R')
fname <- list.files(dir_datatendcast)
load(file.path(dir_data,'r_sta.Rda'))
r_sta_svrid <- melt(tapply(r_sta$date,r_sta$svr_id,length));names(r_sta_svrid) <- c('svrid','numDate');r_sta_svrid$fn <- get_fname(r_sta_svrid$svrid)
i = 28
load(file.path(dir_data,'splitDD_d1.Rda'))
util_cv <- lapply(splitDD,sta_svrid_lenTrend,fn,'util')
get_array_trend <- function(arr){
arr <- arr[!is.na(arr)]
len <- length(arr)
if(length(unique(arr)) == 1)return(data.frame(start = 0,end = 0,len = 0,amp = 0))
p <- 1;q <- p + 1
trend_tag <- NA
arr_trend <- list()
while(q <= len){
cur_tag <- sign(arr[q] - arr[q-1])
if(is.na(trend_tag) & cur_tag == 0){
p <- p + 1;q <- p + 1
}else if(is.na(trend_tag) & cur_tag != 0){
trend_tag <- cur_tag;q <- q + 1
}else if(trend_tag == cur_tag & q != len){
q <- q + 1
}else if(trend_tag != cur_tag){
target_arr <- arr[p:(q-1)]
arr_trend[[length(arr_trend) + 1]] <- data.frame(start = p,end = q - 1,len = q - p,amp = arr[q - 1] - arr[p],
median = mean(quantile(target_arr,.25),quantile(target_arr,.75)))
p <- q ;q <- q + 1
trend_tag <- NA
}else{
q <- q + 1
}
}
if(q - p > 1){
target_arr <- arr[p:(q-1)]
arr_trend[[length(arr_trend) + 1]] <- data.frame(start = p,end = q - 1,len = q - p,amp = arr[q - 1] - arr[p],
median = mean(quantile(target_arr,.25),quantile(target_arr,.75)))
}
do.call(rbind,arr_trend)
}
sta_svrid_lenTrend <- function(df,fn,attr){
cat(sprintf('file:%s\tid:%s\tattr:%s\n',fn,df$svrid[1],attr))
# df <- splitDD[names(splitDD) == '894'][[1]]
df$time_cut <- cut.POSIXt(df$time,seq.POSIXt(min(df$time),max(df$time),by = 'month'))
df_unit <- list2df(tapply(df[[attr]],df$time_cut,mean,na.rm = T),n = c('value','units'))
# ggplot(df_unit,aes(x = units,y = value,group = 1)) + geom_line()
len <- dim(df_unit)[1]
sta_trend <- get_array_trend(df_unit$value)
sta_trend <- subset(sta_trend,len > 1)
if(nrow(sta_trend) == 0){
r_ssl <- data.frame(amp_ap = NA,start_ap = NA,len_ap = NA,mdn_ap = NA,amp_lp = NA,start_lp = NA,len_lp = NA,mdn_lp = NA)
names(r_ssl) <- paste(attr,names(r_ssl),sep='_')
return(r_ssl)
}
idx_pa <- which(sta_trend$amp == max(sta_trend$amp[sta_trend$amp > 0]))[1]
idx_na <- which(sta_trend$amp == min(sta_trend$amp[sta_trend$amp < 0]))[1]
idx_pl <- which(sta_trend$amp > 0);idx_pl <- idx_pl[which(sta_trend$len[idx_pl] == max(sta_trend$len[idx_pl]))][1]
idx_nl <- which(sta_trend$amp < 0);idx_nl <- idx_nl[which(sta_trend$len[idx_nl] == max(sta_trend$len[idx_nl]))][1]
r_ssl <- data.frame(amp_ap = sta_trend$amp[idx_pa],start_ap = sta_trend$start[idx_pa],len_ap = sta_trend$len[idx_pa],mdn_ap = sta_trend$median[idx_pa],
amp_lp = sta_trend$amp[idx_pl],start_lp = sta_trend$start[idx_pl],len_lp = sta_trend$len[idx_pl],mdn_lp = sta_trend$median[idx_pl])
# amp_an = sta_trend$amp[idx_na],start_an = sta_trend$start[idx_na],len_an = sta_trend$len[idx_na],
# amp_ln = sta_trend$amp[idx_nl],start_ln = sta_trend$start[idx_nl],len_ln = sta_trend$len[idx_nl])
names(r_ssl) <- paste(attr,names(r_ssl),sep='_')
r_ssl
}
util_cv <- lapply(splitDD,sta_svrid_lenTrend,fn,'util')
fn <- fname[i]
util_cv <- lapply(splitDD,sta_svrid_lenTrend,fn,'util')
xps_cv <- lapply(splitDD,sta_svrid_lenTrend,fn,'xps')
iops_cv <- lapply(splitDD,sta_svrid_lenTrend,fn,'iops')
iopsr_cv <- lapply(splitDD,sta_svrid_lenTrend,fn,'iopsr')
iopsw_cv <- lapply(splitDD,sta_svrid_lenTrend,fn,'iopsw')
r <- cbind(svrid = names(util_cv),do.call(rbind,util_cv),do.call(rbind,xps_cv),do.call(rbind,iops_cv),do.call(rbind,iopsr_cv),do.call(rbind,iopsw_cv))
View(r)
util_cv <- lapply(splitDD[200:250],sta_svrid_lenTrend,fn,'util')
util_cv <- lapply(splitDD[1:10],sta_svrid_lenTrend,fn,'util')
r <- cbind(svrid = names(util_cv),do.call(rbind,util_cv),do.call(rbind,xps_cv),do.call(rbind,iops_cv),do.call(rbind,iopsr_cv),do.call(rbind,iopsw_cv))
source('~/Code/R/attrid/sta_trend_length.R')
View(sta_trend_util)
sta_trend_util <- sta_trend_len[,grepl('svrid|util',names(sta_trend_len))]
sta_trend_util <- sta_trend_util[,grepl('svrid|amp_ap|len_lp|amp_an|len_ln|mdn',names(sta_trend_util))]
View(sta_trend_util)
sta_trend_util <- sta_trend_len[,grepl('svrid|util',names(sta_trend_len))]
View(sta_trend_util)
get_array_trend <- function(arr){
arr <- arr[!is.na(arr)]
len <- length(arr)
if(length(unique(arr)) == 1)return(data.frame(start = 0,end = 0,len = 0,amp = 0))
p <- 1;q <- p + 1
trend_tag <- NA
arr_trend <- list()
while(q <= len){
cur_tag <- sign(arr[q] - arr[q-1])
if(is.na(trend_tag) & cur_tag == 0){
p <- p + 1;q <- p + 1
}else if(is.na(trend_tag) & cur_tag != 0){
trend_tag <- cur_tag;q <- q + 1
}else if(trend_tag == cur_tag & q != len){
q <- q + 1
}else if(trend_tag != cur_tag){
target_arr <- diff(arr[p:(q-1)])
arr_trend[[length(arr_trend) + 1]] <- data.frame(start = p,end = q - 1,len = q - p,amp = arr[q - 1] - arr[p],
median = mean(quantile(target_arr,.25),quantile(target_arr,.75)))
p <- q ;q <- q + 1
trend_tag <- NA
}else{
q <- q + 1
}
}
if(q - p > 1){
target_arr <- diff(arr[p:(q-1)])
arr_trend[[length(arr_trend) + 1]] <- data.frame(start = p,end = q - 1,len = q - p,amp = arr[q - 1] - arr[p],
median = mean(quantile(target_arr,.25),quantile(target_arr,.75)))
}
do.call(rbind,arr_trend)
}
load(file.path(dir_data,'splitDD_a1.Rda'))
get_array_trend <- function(arr){
arr <- arr[!is.na(arr)]
len <- length(arr)
if(length(unique(arr)) == 1)return(data.frame(start = 0,end = 0,len = 0,amp = 0))
p <- 1;q <- p + 1
trend_tag <- NA
arr_trend <- list()
while(q <= len){
cur_tag <- sign(arr[q] - arr[q-1])
if(is.na(trend_tag) & cur_tag == 0){
p <- p + 1;q <- p + 1
}else if(is.na(trend_tag) & cur_tag != 0){
trend_tag <- cur_tag;q <- q + 1
}else if(trend_tag == cur_tag & q != len){
q <- q + 1
}else if(trend_tag != cur_tag){
target_arr <- diff(arr[p:(q-1)])
arr_trend[[length(arr_trend) + 1]] <- data.frame(start = p,end = q - 1,len = q - p,amp = arr[q - 1] - arr[p],
median = mean(quantile(target_arr,.25),quantile(target_arr,.75)))
p <- q ;q <- q + 1
trend_tag <- NA
}else{
q <- q + 1
}
}
if(q - p > 1){
target_arr <- diff(arr[p:(q-1)])
arr_trend[[length(arr_trend) + 1]] <- data.frame(start = p,end = q - 1,len = q - p,amp = arr[q - 1] - arr[p],
median = mean(quantile(target_arr,.25),quantile(target_arr,.75)))
}
do.call(rbind,arr_trend)
}
sta_svrid_lenTrend <- function(df,fn,attr){
cat(sprintf('file:%s\tid:%s\tattr:%s\n',fn,df$svrid[1],attr))
# df <- splitDD[names(splitDD) == '894'][[1]]
df$time_cut <- cut.POSIXt(df$time,seq.POSIXt(min(df$time),max(df$time),by = 'month'))
df_unit <- list2df(tapply(df[[attr]],df$time_cut,mean,na.rm = T),n = c('value','units'))
# ggplot(df_unit,aes(x = units,y = value,group = 1)) + geom_line()
len <- dim(df_unit)[1]
sta_trend <- get_array_trend(df_unit$value)
sta_trend <- subset(sta_trend,len > 1)
if(nrow(sta_trend) == 0){
r_ssl <- data.frame(amp_ap = NA,start_ap = NA,len_ap = NA,mdn_ap = NA,amp_lp = NA,start_lp = NA,len_lp = NA,mdn_lp = NA)
names(r_ssl) <- paste(attr,names(r_ssl),sep='_')
return(r_ssl)
}
idx_pa <- which(sta_trend$amp == max(sta_trend$amp[sta_trend$amp > 0]))[1]
idx_na <- which(sta_trend$amp == min(sta_trend$amp[sta_trend$amp < 0]))[1]
idx_pl <- which(sta_trend$amp > 0);idx_pl <- idx_pl[which(sta_trend$len[idx_pl] == max(sta_trend$len[idx_pl]))][1]
idx_nl <- which(sta_trend$amp < 0);idx_nl <- idx_nl[which(sta_trend$len[idx_nl] == max(sta_trend$len[idx_nl]))][1]
r_ssl <- data.frame(amp_ap = sta_trend$amp[idx_pa],start_ap = sta_trend$start[idx_pa],len_ap = sta_trend$len[idx_pa],mdn_ap = sta_trend$median[idx_pa],
amp_lp = sta_trend$amp[idx_pl],start_lp = sta_trend$start[idx_pl],len_lp = sta_trend$len[idx_pl],mdn_lp = sta_trend$median[idx_pl])
# amp_an = sta_trend$amp[idx_na],start_an = sta_trend$start[idx_na],len_an = sta_trend$len[idx_na],
# amp_ln = sta_trend$amp[idx_nl],start_ln = sta_trend$start[idx_nl],len_ln = sta_trend$len[idx_nl])
names(r_ssl) <- paste(attr,names(r_ssl),sep='_')
r_ssl
}
util_cv <- lapply(splitDD,sta_svrid_lenTrend,fn,'util')
fn <- 'a1.Rda'
util_cv <- lapply(splitDD,sta_svrid_lenTrend,fn,'util')
a <- cbind(svrid = names(util_cv),do.call(rbind,util_cv)
)
View(a)
a[,-1] <- round(a[,-1],digits = 4)
df <- splitDD[names(splitDD) == '1834'][[1]]
df$time_cut <- cut.POSIXt(df$time,seq.POSIXt(min(df$time),max(df$time),by = 'month'))
df_unit <- list2df(tapply(df[[attr]],df$time_cut,mean,na.rm = T),n = c('value','units'))
df <- splitDD[names(splitDD) == '1834'][[1]]
df$time_cut <- cut.POSIXt(df$time,seq.POSIXt(min(df$time),max(df$time),by = 'month'))
attr <- 'util'
df_unit <- list2df(tapply(df[[attr]],df$time_cut,mean,na.rm = T),n = c('value','units'))
ggplot(df_unit,aes(x = units,y = value,group = 1)) + geom_line()
View(a)
View(df_unit)
df <- splitDD[names(splitDD) == '1589'][[1]]
df$time_cut <- cut.POSIXt(df$time,seq.POSIXt(min(df$time),max(df$time),by = 'month'))
df_unit <- list2df(tapply(df[[attr]],df$time_cut,mean,na.rm = T),n = c('value','units'))
ggplot(df_unit,aes(x = units,y = value,group = 1)) + geom_line()
View(sta_trend_xps)
df$time_cut <- cut.POSIXt(df$time,seq.POSIXt(min(df$time),max(df$time),by = 'week'))
df_unit <- list2df(tapply(df[[attr]],df$time_cut,mean,na.rm = T),n = c('value','units'))
ggplot(df_unit,aes(x = units,y = value,group = 1)) + geom_line()
df$time_cut <- cut.POSIXt(df$time,seq.POSIXt(min(df$time),max(df$time),by = 'days'))
df_unit <- list2df(tapply(df[[attr]],df$time_cut,mean,na.rm = T),n = c('value','units'))
ggplot(df_unit,aes(x = units,y = value,group = 1)) + geom_line()
df$time_cut <- cut.POSIXt(df$time,seq.POSIXt(min(df$time),max(df$time),by = 'month'))
df_unit <- list2df(tapply(df[[attr]],df$time_cut,mean,na.rm = T),n = c('value','units'))
ggplot(df_unit,aes(x = units,y = value,group = 1)) + geom_line()
View(df_unit)
mean(c(1,2,3,NA),na.rm = T)
rm(list = ls())
aggregate_date <- function(rx,func){
f <- get(func)
d <- lapply(rx,function(x){
aggregate(x[,!grepl('svrid|date',names(x))],by = list(x$svrid),f,na.rm = T)
})
}
aggregate_iops <- function(rx,func){
f <- get(func)
d0 <- rx[['d0']]
d1 <- lapply(rx[-1],function(x){
x1 <- cbind(x[,!grepl('iops',names(x))],
apply(x[,grepl('iopsr',names(x))],1,f,na.rm = T),
apply(x[,grepl('iopsw',names(x))],1,f,na.rm = T))
names(x1) <- c(names(x)[!grepl('iops',names(x))],'iopsr','iopsw')
x1
})
list(d0,do.call(rbind,d1))
}
get_d <- function(str){
list[me,sd,su,co] <- list(r_mean[[str]],r_sd[[str]],r_sum[[str]],r_count[[str]])
}
get_svrid <- function(dx,id){
list(subset(r_mean[[dx]],svrid == id),
subset(r_sd[[dx]],svrid == id),
subset(r_sum[[dx]],svrid == id),
subset(r_count[[dx]],svrid == id),
subset(r_sta,svr_id == id))
}
source('head.R')
source('iops_clear.R')
# Last   modified: 2017-02-13 11:04:22
#
#
#
rm(list = ls())
aggregate_date <- function(rx,func){
f <- get(func)
d <- lapply(rx,function(x){
aggregate(x[,!grepl('svrid|date',names(x))],by = list(x$svrid),f,na.rm = T)
})
}
aggregate_iops <- function(rx,func){
f <- get(func)
d0 <- rx[['d0']]
d1 <- lapply(rx[-1],function(x){
x1 <- cbind(x[,!grepl('iops',names(x))],
apply(x[,grepl('iopsr',names(x))],1,f,na.rm = T),
apply(x[,grepl('iopsw',names(x))],1,f,na.rm = T))
names(x1) <- c(names(x)[!grepl('iops',names(x))],'iopsr','iopsw')
x1
})
list(d0,do.call(rbind,d1))
}
get_d <- function(str){
list[me,sd,su,co] <- list(r_mean[[str]],r_sd[[str]],r_sum[[str]],r_count[[str]])
}
get_svrid <- function(dx,id){
list(subset(r_mean[[dx]],svrid == id),
subset(r_sd[[dx]],svrid == id),
subset(r_sum[[dx]],svrid == id),
subset(r_count[[dx]],svrid == id),
subset(r_sta,svr_id == id))
}
###### ANALYSIS MAIN ######
source('head.R')
library(plyr)
load(file.path(dir_data,'perday_201608.Rda'))
rm(list = ls())
source('head.R')
# source('iops_clear.R')
library(plyr)
day_aggre <- function(df,aggr){
df <- subset(df,!is.na(df$value))
r <- tapply(df$value,df$attrid,function(x)data.frame(mean = mean(x),sd = sd(x),
sum = sum(x),count = sum(!is.na(x))))
return(data.frame(lapply(r,'[[',aggr)))
}
col_sort <- function(df){
names(df) <- coln_mapper$b[match(names(df),coln_mapper$a)]
df[grepl('ps|util|iops',names(df))] <- round(df[grepl('ps|util|iops',names(df))],digits = 4)
order_col <- setdiff(coln_mapper$b,setdiff(coln_mapper$b,names(df)))
df <- df[,order_col]
}
del_col <- function(df){
r <- apply(df,2,function(x)sum(is.na(x)))/nrow(df)
df[,names(r)[r > 0.999]] <- NULL
df
}
gen_sta <- function(i){
load(file.path(dir_datafile,fname[i]))
data$svr_id <- factor(data$svr_id)
data <- iops_melt_clear(data)
r <- list()
cat(sprintf('[%s]%s:r_sta\n',date(),fname[i]))
r[['sta']] <- ddply(data,.(svr_id,date),function(df)data.frame(Count = length(df$attrid),numAttrid = length(unique(df$attrid)),fn = fname[i]))
cat(sprintf('[%s]%s:r_mean\n',date(),fname[i]))
r[['mean']] <- col_sort(ddply(data,.(svr_id,date),day_aggre,aggr = 'mean'))
cat(sprintf('[%s]%s:r_sd\n',date(),fname[i]))
r[['sd']] <- col_sort(ddply(data,.(svr_id,date),day_aggre,aggr = 'sd'))
cat(sprintf('[%s]%s:r_sum\n',date(),fname[i]))
r[['sum']] <- col_sort(ddply(data,.(svr_id,date),day_aggre,aggr = 'sum'))
cat(sprintf('[%s]%s:r_count\n',date(),fname[i]))
r[['count']] <- col_sort(ddply(data,.(svr_id,date),day_aggre,aggr = 'count'))
r
}
reduce_sta <- function(rs){
system.time(rs <- lapply(rs,del_col))
sta_col <- data.frame(numCol = (sapply(rs,ncol)-5)/2,
idx = 1:length(rs),
fn = fname)
splitCol <- split(sta_col,sta_col$numCol)
rs1 <- list()
x <- lapply(splitCol,function(sc){
rs1[[paste('d',sc$numCol[1],sep='')]] <<- do.call(rbind,rs[sc$idx])
return(0)
})
rs1
}
dir_datafile <- '/home/yiyusheng/Data/tencProcess/mergePartSvrid'
fname <- list.files(dir_datafile)
coln_mapper <- data.frame(a = c('svr_id','date',paste('X',c(902,903,999,36810:36857),sep='')),
b = c('svrid','date','rps','wps','util',paste('iopsr',1:24,sep=''),paste('iopsw',1:24,sep='')))
View(coln_mapper)
i = 28
load(file.path(dir_datafile,fname[i]))
data$svr_id <- factor(data$svr_id)
data <- iops_melt_clear(data)
r[['mean']] <- col_sort(ddply(data,.(svr_id,date),day_aggre,aggr = 'mean'))
r <- list()
r[['mean']] <- col_sort(ddply(data,.(svr_id,date),day_aggre,aggr = 'mean'))
a <- r[['mean']]
summary(a)
source('~/Code/R/tencProcess/mergePartDiskClear.R')
