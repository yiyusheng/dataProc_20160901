sdSet$sid <- factor(gsub('s','',sdSet$sid))
sdSet$did <- factor(gsub('d','',sdSet$did))
load(file.path(dir_data,'sdSet.Rda'))
sdSet$sid <- factor(gsub('s','',sdSet$sid))
sdSet$did <- as.numeric(gsub('d','',sdSet$did))
table(sdSet$did)
sdSet$did[is.na(sdSet$did)] <- 0
table(sdSet$did)
load(file.path(dir_data,'sdSet.Rda'))
sdSet$sid <- factor(as.numeric(gsub('s','',sdSet$sid)))
sdSet$did <- as.numeric(gsub('d','',sdSet$did))
sdSet$did[is.na(sdSet$did)] <- 0
sdSet$use_time <- svrInfo0902$use_time[match(sdSet$sid,svrInfo0902$svr_id)]
sdSet <- subset(sdSet,!is.na(use_time))
sdSplit <- split(sdSet,sdSet$sid)
s <- names(frSplit)[1000]
s
frSplit <- split(fr,fr$svrid)
sdSplit <- split(sdSet,sdSet$sid)
s <- names(frSplit)[1000]
load(file.path(dir_ten,'failRecord_1407-1506.Rda'))
fr <- failRecord[,c('svr_id','f_time')]
names(fr) <- c('svrid','ftime')
frSplit <- split(fr,fr$svrid)
s <- names(frSplit)
s <- names(frSplit)[1000]
s
f <- frSplit[[s]]
c <- sdSplit[[s]]
View(f)
View(c)
len.f <- nrow(f)
len.c <- nrow(c)
max.c <- max(c$diskidx)
max.c <- max(c$did)
tmp <- c[rep(len.c,len.f),]
tmp <- c[rep(len.c,len.f),]
tmp$did <- tmp$did + 1:len.f
tmp$use_time <- f$f_time
tmp <- c[rep(len.c,len.f),]
tmp$did <- tmp$did + 1:len.f
f
tmp$use_time <- f$f_time
tmp <- c[rep(len.c,len.f),]
tmp$did <- tmp$did + 1:len.f
f$f_time
tmp$use_time <- f$ftime
c <- rbind(c,tmp)
View(c)
c$status[1:len.f] <- 'failed'
View(c)
len.f
sdSet$status <- 'working'
sdSplit <- split(sdSet,sdSet$sid)
f <- frSplit[[s]]
c <- sdSplit[[s]]
len.f <- nrow(f)
len.c <- nrow(c)
# append new item after the last disk id
# copy len.f items of the last item of c[len.c]
# use_time means the start use time after inserting a new disk, then it equals to the time fails
tmp <- c[rep(len.c,len.f),]
tmp$did <- tmp$did + 1:len.f
tmp$use_time <- f$ftime
c <- rbind(c,tmp)
# modify status to failed for disks with low diskid
c$status[1:len.f] <- 'failed'
c$f_time[1:len.f] <- f$f_time
View(c)
sdSet$f_time <- as.p('2015-07-01')
sdSplit <- split(sdSet,sdSet$sid)
f <- frSplit[[s]]
c <- sdSplit[[s]]
len.f <- nrow(f)
len.c <- nrow(c)
# append new item after the last disk id
# copy len.f items of the last item of c[len.c]
# use_time means the start use time after inserting a new disk, then it equals to the time fails
tmp <- c[rep(len.c,len.f),]
tmp$did <- tmp$did + 1:len.f
tmp$use_time <- f$ftime
c <- rbind(c,tmp)
# modify status to failed for disks with low diskid
c$status[1:len.f] <- 'failed'
c$f_time[1:len.f] <- f$f_time
View(c)
c$f_time[1:len.f] <- f$f_time
f$f_time
c$f_time[1:len.f] <- f$ftime
View(c)
r <- lapply(names(frSplit)[1:100],function(s){
f <- frSplit[[s]]
c <- sdSplit[[s]]
len.f <- nrow(f)
len.c <- nrow(c)
if(len.f == 0 | len.c == 0) return(NULL)
# append new item after the last disk id
# copy len.f items of the last item of c[len.c]
# use_time means the start use time after inserting a new disk, then it equals to the time fails
tmp <- c[rep(len.c,len.f),]
tmp$did <- tmp$did + 1:len.f
tmp$use_time <- f$ftime
c <- rbind(c,tmp)
# modify status to failed for disks with low diskid
c$status[1:len.f] <- 'failed'
c$f_time[1:len.f] <- f$ftime
return(c)
})
Q
r <- lapply(names(frSplit)[1:100],function(s){
f <- frSplit[[s]]
c <- sdSplit[[s]]
len.f <- nrow(f)
len.c <- nrow(c)
if(len.f == NULL | len.c == NULL) return(NULL)
# append new item after the last disk id
# copy len.f items of the last item of c[len.c]
# use_time means the start use time after inserting a new disk, then it equals to the time fails
tmp <- c[rep(len.c,len.f),]
tmp$did <- tmp$did + 1:len.f
tmp$use_time <- f$ftime
c <- rbind(c,tmp)
# modify status to failed for disks with low diskid
c$status[1:len.f] <- 'failed'
c$f_time[1:len.f] <- f$ftime
return(c)
})
frSplit <- frSplit[1:100]
sdSplit <- sdSplit[names(sdSplit) %in% names(frSplit)]
r <- lapply(names(frSplit)[1:100],function(s){
f <- frSplit[[s]]
c <- sdSplit[[s]]
len.f <- nrow(f)
len.c <- nrow(c)
cat(sprintf('%.0f',s))
if(is.null(len.f) | is.null(len.c)) return(NULL)
# append new item after the last disk id
# copy len.f items of the last item of c[len.c]
# use_time means the start use time after inserting a new disk, then it equals to the time fails
tmp <- c[rep(len.c,len.f),]
tmp$did <- tmp$did + 1:len.f
tmp$use_time <- f$ftime
c <- rbind(c,tmp)
# modify status to failed for disks with low diskid
c$status[1:len.f] <- 'failed'
c$f_time[1:len.f] <- f$ftime
return(c)
})
r <- lapply(names(frSplit)[1:100],function(s){
f <- frSplit[[s]]
c <- sdSplit[[s]]
len.f <- nrow(f)
len.c <- nrow(c)
cat(sprintf('%s',s))
if(is.null(len.f) | is.null(len.c)) return(NULL)
# append new item after the last disk id
# copy len.f items of the last item of c[len.c]
# use_time means the start use time after inserting a new disk, then it equals to the time fails
tmp <- c[rep(len.c,len.f),]
tmp$did <- tmp$did + 1:len.f
tmp$use_time <- f$ftime
c <- rbind(c,tmp)
# modify status to failed for disks with low diskid
c$status[1:len.f] <- 'failed'
c$f_time[1:len.f] <- f$ftime
return(c)
})
frSplit <- split(fr,fr$svrid)[1:1000]
sdSplit <- split(sdSet,sdSet$sid)[1:1000]
r <- lapply(names(frSplit)[1:1000],function(s){
f <- frSplit[[s]]
c <- sdSplit[[s]]
len.f <- nrow(f)
len.c <- nrow(c)
cat(sprintf('%s\n',s))
if(is.null(len.f) | is.null(len.c)) return(NULL)
# append new item after the last disk id
# copy len.f items of the last item of c[len.c]
# use_time means the start use time after inserting a new disk, then it equals to the time fails
tmp <- c[rep(len.c,len.f),]
tmp$did <- tmp$did + 1:len.f
tmp$use_time <- f$ftime
c <- rbind(c,tmp)
# modify status to failed for disks with low diskid
c$status[1:len.f] <- 'failed'
c$f_time[1:len.f] <- f$ftime
return(c)
})
r1 <- do.call(rbind,r)
View(r1)
a <- subset(sdSet,sid == 10)
View(a)
source('~/Code/R/attrid/disk_data_hr.R')
s <- '10924'
f <- frSplit[[s]]
c <- sdSplit[[s]]
len.f <- nrow(f)
len.c <- nrow(c)
View(c)
is.null(len.f) | is.null(len.c)
is.null(len.f) | is.null(len.c) | len.f == 0 | len.c == 0
source('~/Code/R/attrid/disk_data_hr.R')
1 + 1
s <- '1'
f <- frSplit[[s]]
c <- sdSplit[[s]]
len.f <- nrow(f)
len.c <- nrow(c)
is.null(len.f) | is.null(len.c) | len.f == 0 | len.c == 0
len.f == 0
len.c == 0
interSplit <- intersect(names(frSplit),names(sdSplit))
source('~/Code/R/attrid/disk_data_hr.R')
s <- '10924'
f <- frSplit[[s]]
c <- sdSplit[[s]]
s in interSplit
s %in% interSplit
a <- subset(sdSplit,sid == s)
sdSet <- factorX(sdSet)
fr <- factorX(fr)
frSplit <- split(fr,fr$svrid)
sdSplit <- split(sdSet,sdSet$sid)
interSplit <- intersect(names(frSplit),names(sdSplit))
frSplit <- frSplit[names(frSplit) %in% interSplit]
sdSplit <- sdSplit[names(sdSplit) %in% interSplit]
s
s %in% interSplit
source('~/Code/R/attrid/disk_data_hr.R')
r <- lapply(names(frSplit),function(s){
f <- frSplit[[s]]
c <- sdSplit[[s]]
len.f <- nrow(f)
len.c <- nrow(c)
cat(sprintf('%s\n',s))
# append new item after the last disk id
# copy len.f items of the last item of c[len.c]
# use_time means the start use time after inserting a new disk, then it equals to the time fails
tmp <- c[rep(len.c,len.f),]
tmp$did <- tmp$did + 1:len.f
tmp$use_time <- f$ftime
c <- rbind(c,tmp)
# modify status to failed for disks with low diskid
c$status[1:len.f] <- 'failed'
c$f_time[1:len.f] <- f$ftime
return(c)
})
virtDisk <- do.call(rbind,r)
View(virtDisk)
View(fr)
source('../dataLoadforDiskAnalysis/loadFunc.R')
fr <- dedupTime(fr,3,'svrid')
Q
save(virtDisk,file = file.path(dir_data,'virtDisk.Rda'))
save(fr,sdSet,virtDisk,file = file.path(dir_data,'virtDisk.Rda'))
rm(list = ls())
source('head.R')
load(file.path(dir_data,'virtDisk.Rda'))
source('../dataLoadforDiskAnalysis/loadFunc.R')
fr <- dedupTime(fr,3,'svrid')
data.flist <- fr
dayDup <- 3
attr <- 'svrid'
data.flist <- data.flist[order(data.flist[[attr]],data.flist$f_time),]
names(fr) <- c('svrid','f_time')
a <- dedupTime(fr,3,'svrid')
data.flist <- data.flist[order(data.flist[[attr]],data.flist$f_time),]
data.flist <- fr
data.flist <- data.flist[order(data.flist[[attr]],data.flist$f_time),]
data.flist[[attr]] <- as.character(data.flist[[attr]])
delset <- numeric()
pSvrid <- data.flist[[attr]][1]
pFtime <- data.flist$f_time[1]
i = 2
curSvrid <- data.flist[[attr]][i]
curFtime <- data.flist$f_time[i]
curSvrid == pSvrid
curSvrid == pSvrid
curSvrid != pSvrid
for (i in 2:nrow(data.flist)){
curSvrid <- data.flist[[attr]][i]
curFtime <- data.flist$f_time[i]
if (curSvrid == pSvrid &
as.numeric(difftime(curFtime,pFtime,tz = 'UTC',units = 'days')) > dayDup){
pFtime <- curFtime
next
} else if(curSvrid == pSvrid &
as.numeric(difftime(curFtime,pFtime,tz = 'UTC',units = 'days')) <= dayDup){
delset <- c(delset,i)
} else if(curSvrid != pSvrid){
pFtime <- curFtime
pSvrid <- curSvrid
next
}
}
data.flist <- data.flist[-delset,]
delset
load(file.path(dir_ten,'failRecord_1407-1506.Rda'))
save(fvirtDisk,file = file.path(dir_data,'virtDisk.Rda'))
save(virtDisk,file = file.path(dir_data,'virtDisk.Rda'))
View(virtDisk)
summary(virtDisk)
names(virtDisk) <- NULL
load('file.path(dir_data,'virtDisk.Rda')')
load(file.path(dir_data,'virtDisk.Rda'))
row.names(virtDisk) <- NULL
virtDisk <- virtDisk[order(virtDisk$sid,virtDisk$did),]
View(virtDisk)
source('~/Code/R/attrid/disk_data_hr.R')
rm(list = ls())
source('head.R')
dir_dataten <- '/home/yiyusheng/Data/tencProcess/mergePartSvrid/'
dir_datatendcast <- '/home/yiyusheng/Data/tencProcess/mergePartSvridDcast/'
fname <- list.files(dir_datatendcast)
load(file.path(dir_datatendcast,'d1test.Rda'))
dd <- iops_dcast_clear(dt_dcast)
dd_day <- dd
dd_day$time <- as.Date(dd_day$time)
source('iops_dcast_clear.R')
dd <- iops_dcast_clear(dt_dcast)
dd_day <- dd
dd_day$time <- as.Date(dd_day$time)
dd_day <- aggregate(dd_day[grepl('ps|util|iops',names(dd_day))],by = list(dd_day$svrid,dd_day$time),
function(x)round(mean(x,na.rm = T),digits = 4))
names(dd_day) <- names(dd)
View(dd_day)
cut_weeks <- seq.POSIXt(as.p('2014-07-01'),as.p('2015-07-01'),by = 'weeks')
cut_weeks
cut_weeks <- seq.POSIXt(as.p('2014-07-01'),as.p('2015-07-01'),by = 'weeks')
dd_week$time <- cut.POSIXt(dd_day$time,cut_weeks)
dd_week$time <- cut.POSIXt(dd_week$time,cut_weeks)
dd_week <- dd
dd_week$time <- cut.POSIXt(dd_week$time,cut_weeks)
head(dd_week$time)
cut_weeks <- seq.POSIXt(as.p('2014-07-01'),as.p('2015-07-01'),by = 'weeks')
cut_weeks[length(cut_weeks)] <- as.p('2015-07-01')
dd_week <- dd
dd_week$time <- cut.POSIXt(dd_week$time,cut_weeks)
cut_weeks <- seq.POSIXt(as.p('2014-07-01'),as.p('2015-07-01'),by = 'weeks')
cut_weeks[length(cut_weeks)] <- as.p('2015-07-01')
dd_week <- dd
dd_week$time <- cut.POSIXt(dd_week$time,cut_weeks)
dd_week <- aggregate(dd_week[grepl('ps|util|iops',names(dd_week))],by = list(dd_week$svrid,dd_week$time),
function(x)round(mean(x,na.rm = T),digits = 4))
names(dd_week) <- names(dd)
View(dd_week)
cut_months <- seq.POSIXt(as.p('2014-07-01'),as.p('2015-07-01'),by = 'months')
dd_month <- dd
dd_month$time <- cut.POSIXt(dd_month$time,cut_months)
dd_month <- aggregate(dd_month[grepl('ps|util|iops',names(dd_month))],by = list(dd_month$svrid,dd_month$time),
function(x)round(mean(x,na.rm = T),digits = 4))
names(dd_month) <- names(dd)
View(dd_month)
fname <- setdiff(list.files(dir_datatendcast),'d1test.Rda')
source('~/Code/R/attrid/gen_io_timescale.R')
which(fname == 'd1.Rda')
i = 28
load(file.path(dir_datatendcast,fname[i]))
dd <- iops_dcast_clear(dt_dcast)
dd_day <- dd
dd_day$time <- as.Date(dd_day$time)
dd_day <- aggregate(dd_day[grepl('ps|util|iops',names(dd_day))],by = list(dd_day$svrid,dd_day$time),
function(x)round(mean(x,na.rm = T),digits = 4))
names(dd_day) <- names(dd)
cut_weeks <- seq.POSIXt(as.p('2014-07-01'),as.p('2015-07-01'),by = 'weeks')
cut_weeks[length(cut_weeks)] <- as.p('2015-07-01')
dd_week <- dd
dd_week$time <- cut.POSIXt(dd_week$time,cut_weeks)
dd_week <- aggregate(dd_week[grepl('ps|util|iops',names(dd_week))],by = list(dd_week$svrid,dd_week$time),
function(x)round(mean(x,na.rm = T),digits = 4))
names(dd_week) <- names(dd)
cut_months <- seq.POSIXt(as.p('2014-07-01'),as.p('2015-07-01'),by = 'months')
dd_month <- dd
dd_month$time <- cut.POSIXt(dd_month$time,cut_months)
dd_month <- aggregate(dd_month[grepl('ps|util|iops',names(dd_month))],by = list(dd_month$svrid,dd_month$time),
function(x)round(mean(x,na.rm = T),digits = 4))
names(dd_month) <- names(dd)
a <- list(d1 = dd_day,d2 = dd_week,d3 = dd_month)
?rbind
rm(list = ls())
source('head.R')
source('iops_dcast_clear.R')
dir_dataten <- '/home/yiyusheng/Data/tencProcess/mergePartSvrid/'
dir_datatendcast <- '/home/yiyusheng/Data/tencProcess/mergePartSvridDcast/'
fname <- setdiff(list.files(dir_datatendcast),'d1test.Rda')
fname <- setdiff(fname,list.files(file.path(dir_data,'timescale_dd')))
load(file.path(dir_data,'io_timescale.Rda'))
rm(list = ls())
source('head.R')
load(file.path(dir_data,'io_timescale.Rda'))
dd <- r[[1]]
dd_day <- lapply(r,'[[','d1')
dd_week <- lapply(r,'[[','d2')
dd_month <- lapply(r,'[[','d3')
sta_col <- data.frame(numCol = sapply(dd_day,ncol))
sta_col <- data.frame(numCol = sapply(dd_day,ncol),
idx = 1:length(dd_day))
View(sta_col)
splitCol <- split(sta_col,sta_col$numCol)
sort(unique(sta_col$numCol))
53-5
(sort(unique(sta_col$numCol))-5)/2
sta_col <- data.frame(numCol = (sapply(dd_day,ncol)-5)/2,
idx = 1:length(dd_day))
splitCol <- split(sta_col,sta_col$numCol)
sc <- splitCol[[1]]
View(sc)
eval(parse(text = sprintf('dd_day%d <- do.call(rbind,dd_day[sc$idx]',sc$numCol[1])))
eval(parse(text = sprintf('dd_day%d <- do.call(rbind,dd_day[sc$idx])',sc$numCol[1])))
lapply(splitCol,function(sc){
eval(parse(text = sprintf('dd_day%d <- do.call(rbind,dd_day[sc$idx])',sc$numCol[1])))
eval(parse(text = sprintf('dd_week%d <- do.call(rbind,dd_week[sc$idx])',sc$numCol[1])))
eval(parse(text = sprintf('dd_month%d <- do.call(rbind,dd_month[sc$idx])',sc$numCol[1])))
})
NULL <- lapply(splitCol,function(sc){
eval(parse(text = sprintf('dd_day%d <- do.call(rbind,dd_day[sc$idx])',sc$numCol[1])))
eval(parse(text = sprintf('dd_week%d <- do.call(rbind,dd_week[sc$idx])',sc$numCol[1])))
eval(parse(text = sprintf('dd_month%d <- do.call(rbind,dd_month[sc$idx])',sc$numCol[1])))
})
x <- lapply(splitCol,function(sc){
eval(parse(text = sprintf('dd_day%d <- do.call(rbind,dd_day[sc$idx])',sc$numCol[1])))
eval(parse(text = sprintf('dd_week%d <- do.call(rbind,dd_week[sc$idx])',sc$numCol[1])))
eval(parse(text = sprintf('dd_month%d <- do.call(rbind,dd_month[sc$idx])',sc$numCol[1])))
})
x <- lapply(splitCol,function(sc){
eval(parse(text = sprintf('dd_day%d <<- do.call(rbind,dd_day[sc$idx])',sc$numCol[1])))
eval(parse(text = sprintf('dd_week%d <<- do.call(rbind,dd_week[sc$idx])',sc$numCol[1])))
eval(parse(text = sprintf('dd_month%d <<- do.call(rbind,dd_month[sc$idx])',sc$numCol[1])))
return(0)
})
View(dd_month4)
summary(dd_month4$iopsr_4)
summary(dd_month4$iopsr_4 != 0)
summary(dd_day4$iopsr_4 != 0)
apply(dd_month4,2,function(x)corr(x,dd_month4$util))
apply(dd_month4,2,function(x)cor(x,dd_month4$util))
apply(dd_month4[,3:ncol_dd_month4],2,function(x)cor(x,dd_month4$util))
apply(dd_month4[,3:ncol(dd_month4)],2,function(x)cor(x,dd_month4$util))
apply(dd_month12[,3:ncol(dd_month4)],2,function(x)cor(x,dd_month12$util))
summary(dd_month12)
apply(dd_month12[,3:ncol(dd_month12)],2,function(x)cor(x,dd_month12$util,na.rm = T))
apply(dd_month12[,3:ncol(dd_month12)],2,function(x)cor(x,dd_month12$util))
View(dd_month24)
View(dd_week4)
a <- subset(dd_day4,svrid == '11433' & time = as.p('2014-07-01'))
a <- subset(dd_day4,svrid == '11433' & time == as.p('2014-07-01'))
a <- subset(dd_day4,svrid == '11433' & time == as.Date('2014-07-01'))
View(a)
rm(list = ls())
source('head.R')
dir_datafile <- '/home/yiyusheng/Data/tencProcess/mergePartSvrid'
fname <- list.files(dir_datafile)
which(fname == 'd1.Rda')
i = 28
load(file.path(dir_datafile,fname[i]))
data$svr_id <- factor(data$svr_id)
splitData <- split(data,data$svr_id)
df <- splitData[[1]]
a <- split(df,list(df$date,df$attrid))
sapply(a,nrow)
data1 <- subset(data,svr_id %in% c('144','171','172'))
r <- tapply(data1$attrid,list(data1$svr_id,data1$date),function(x)list(a = length(x),b = length(unique(x))))
data1 <- factorX(subset(data,svr_id %in% c('144','171','172')))
r <- tapply(data1$attrid,list(data1$svr_id,data1$date),function(x)list(a = length(x),b = length(unique(x))))
str(r)
?with
library(plyr)
?ddply
?adply
library(plyr)
?ddply
r <- ddply(data1,list(data1$svr_id,data1$date),function(x)list(a = length(x),b = length(unique(x))))
r <- ddply(data1,.(svr_id,date),function(x)list(a = length(x$attrid),b = length(unique(x$attrid))))
r <- ddply(data1,.(svr_id,date),list(a = length(attrid),b = length(unique(attrid))))
dfx <- data.frame(
group = c(rep('A', 8), rep('B', 15), rep('C', 6)),
sex = sample(c("M", "F"), size = 29, replace = TRUE),
age = runif(n = 29, min = 18, max = 54)
)
ddply(dfx, .(group, sex), summarize,
mean = round(mean(age), 2),
sd = round(sd(age), 2))
summarize
r <- ddply(data1,.(svr_id,date),function(df)list(a = length(df$attrid),b = length(unique(df$attrid))))
r <- ddply(data1,.(svr_id,date),function(df)data.frame(a = length(df$attrid),b = length(unique(df$attrid))))
View(r)
mutate
?mutate
View(r)
source('~/Code/R/attrid/sta_201608.R')
i = 28
load(file.path(dir_datafile,fname[i]))
data <- subset(data,svr_id %in% levels(data$svr_id)[1:3])
r <- ddply(data,.(svr_id,date),function(df)data.frame(Count = length(df$attrid),numAttrid = length(unique(df$attrid)),fn = fname[i]))
load(file.path(dir_datafile,fname[i]))
data$svr_id <- factor(data$svr_id)
data <- subset(data,svr_id %in% levels(data$svr_id)[1:3])
r <- ddply(data,.(svr_id,date),function(df)data.frame(Count = length(df$attrid),numAttrid = length(unique(df$attrid)),fn = fname[i]))
View(r)
source('~/Code/R/attrid/sta_201608.R')
r1 <- do.call(rbind,r)
View(r1)
sta_1608 <- r1
warnings()
save(sta_1608,file = file.path(dir_data,'sta_201608.Rda'))
setwd('../tencProcess/')
rm(list = ls())
source('head.R')
load(file.path(dir_data,'partIO.Rda'))
lapply(partSvrid$idx,partSvrid$maxLenIOPS,unique)
tapply(partSvrid$idx,partSvrid$maxLenIOPS,unique)
tapply(fct2ori(partSvrid$idx),partSvrid$maxLenIOPS,unique)
