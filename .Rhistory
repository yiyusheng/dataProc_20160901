partA <- subset(partA,lenIOPS %in% c(0,4,6,24,48))
partA <- list2df(tapply(lenSvrid$countItemPerDay,lenSvrid$maxLenIOPS,function(x){list(mean(x),length(x))}),names = c('numPerDay','count','lenIOPS'))
partA$svrNum <- 5e8/partA$numPerDay/365
partA$svrNum <- 1e8/partA$numPerDay/365
partA$fileNum <- partA$count/partA$svrNum
partA$svrNum <- ceiling(partA$svrNum*10)/10
partA$svrNum <- 1e8/partA$numPerDay/365
partA$svrNum <- ceiling(partA$svrNum/10)*10
partA$fileNum <- partA$count/partA$svrNum
partA$fileNum <- floor(partA$count/partA$svrNum)
source('~/Code/R/tencProcess/partIO.R')
View(partA)
# svrid partition. Laura Ye send me on 09/02/2016
# Partion svrid.
rm(list = ls())
source('head.R')
load(file.path(dir_data,'partIO.Rda'))
dDir <- file.path(dir_data,'compIO')
fileName <- list.files(dDir)
tDir <- file.path('/mnt/window/partSvrid')
fname <- fileName[1]
dt <- tryCatch(read.table(file.path(dDir,fname),header = F),error = function(e) NULL)
names(dt) <- c('date','svr_id','attr','timepoint','value')
if(is.null(dt))return(0)
fileIdx <- data.frame(id = seq_len(nrow(dt)),
file = paste(partSvrid$idx[match(dt$svr_id,partSvrid$svr_id)],fname,sep='-'))
fileIdx <- split(fileIdx$id,fileIdx$file)
fileIdx <- fileIdx[!grepl('NA',names(fileIdx))]
1:length(fileIdx)
names(fileIdx)
names(fileIdx)[1]
i = 1
fn <- names(fileIdx)[i]
system.time(a <- dt[fileIdx[[i]]$id,])
a <- fileIdx[[i]]
head(a)
system.time(a <- dt[fileIdx[[i]],])
file.path(tDir,fn)
for (i in 1:length(fileIdx)){
fn <- names(fileIdx)[i]
cat(sprintf('PROCESS: %s',fn))
write.table(dt[fileIdx[[i]],],file = file.path(tDir,fn))
}
tDir <- file.path(dir_data,'partSvrid')
for (i in 1:length(fileIdx)){
fn <- names(fileIdx)[i]
cat(sprintf('PROCESS: %s\n',fn))
write.table(dt[fileIdx[[i]],],file = file.path(tDir,fn))
}
source('~/Code/R/tencProcess/mergePartSvrid.R')
fn <- unique(partSvrid$idx)
fn
# Merge svrid partition. Laura Ye send me on 09/02/2016
# Merge svrid partition based on file name.
rm(list = ls())
source('head.R')
load(file.path(dir_data,'partIO.Rda'))
tDir <- file.path('/mnt/window/partSvrid')
fileName <- list.files(tDir)
fn <- unique(partSvrid$idx)
fname <- fn[1]
fname
fset <- fileName[grepl(fname,fileName)]
fset
(2+3^0.5)^90
a <- (2+3^0.5)^90
a
sprintf("%52.100f",a)
3^0.4
3^0.5
3^0.5+2
a <- 3^0.5 + 2
a
b <- a^90
b
a
tapply(1:15,function(x)a^x)
tapply(1:15,function(x)a^x)
a^1
a^2
a^3
a^4
a^5
a^6
3.732^6
a
a^6
a^7
a^8
99.5/9.5
# Merge svrid partition. Laura Ye send me on 09/02/2016
# Merge svrid partition based on file name.
rm(list = ls())
source('head.R')
load(file.path(dir_data,'partIO.Rda'))
sDir <- file.path('/mnt/window/partSvrid')
tDir <- file.path('mnt/window/mergePartSvrid')
fileName <- list.files(sDir)
fn <- unique(partSvrid$idx)
fname <- fileName[1]
fname <- fn[1]
fset <- sort(fileName[grepl(fname,fileName)])
fset
fname
source('~/Code/R/tencProcess/mergePartSvrid.R')
fname <- 'a1'
fset <- sort(fileName[grepl(fname,fileName)])[1:10]
str <- sprintf('nohup %s',file.path(tDir,fname))
system(str)
tDir <- file.path('/mnt/window/mergePartSvrid')
str <- sprintf('nohup %s',file.path(tDir,fname))
system(str)
str <- sprintf('touch %s',file.path(tDir,fname))
str <- sprintf('touch %s',file.path(tDir,fname))
system(str)
source('~/Code/R/tencProcess/mergePartSvrid.R')
?write.table
# svrid partition. Laura Ye send me on 09/02/2016
# Partion svrid.
rm(list = ls())
source('head.R')
load(file.path(dir_data,'partIO.Rda'))
dDir <- file.path(dir_data,'compIO')
fileName <- list.files(dDir)
tDir <- file.path('/mnt/window/partSvrid')
fname <- fileName[1]
dt <- tryCatch(read.table(file.path(dDir,fname),header = F),error = function(e) NULL)
names(dt) <- c('date','svr_id','attr','timepoint','value')
if(is.null(dt))return(0)
fileIdx <- data.frame(id = seq_len(nrow(dt)),
file = paste(partSvrid$idx[match(dt$svr_id,partSvrid$svr_id)],fname,sep='-'))
fileIdx <- split(fileIdx$id,fileIdx$file)
fileIdx <- fileIdx[!grepl('NA',names(fileIdx))]
i = 1
fn <- names(fileIdx)[i]
cat(sprintf('PROCESS: %s\n',fn))
write.table(dt[fileIdx[[i]]],file = file.path(tDir,fn),row.names = F,col.names = F)
fileIdx[[i]]
write.table(dt[fileIdx[[i]],],file = file.path(tDir,fn),row.names = F,col.names = F)
# svrid partition. Laura Ye send me on 09/02/2016
# Partion svrid.
rm(list = ls())
source('head.R')
load(file.path(dir_data,'partIO.Rda'))
dDir <- file.path(dir_data,'compIO')
fileName <- list.files(dDir)
tDir <- file.path('/mnt/window/partSvrid')
tDir <- file.path(dir_data,'partSvrid')
# svrid partition. Laura Ye send me on 09/02/2016
# Partion svrid.
rm(list = ls())
source('head.R')
load(file.path(dir_data,'partIO.Rda'))
dDir <- file.path(dir_data,'compIO')
fileName <- list.files(dDir)
tDir <- file.path('/mnt/window/partSvrid')
tDir <- file.path(dir_data,'partSvrid')
part_svrid <- function(fname){
dt <- tryCatch(read.table(file.path(dDir,fname),header = F),error = function(e) NULL)
names(dt) <- c('date','svr_id','attr','timepoint','value')
if(is.null(dt))return(0)
fileIdx <- data.frame(id = seq_len(nrow(dt)),
file = paste(partSvrid$idx[match(dt$svr_id,partSvrid$svr_id)],fname,sep='-'))
fileIdx <- split(fileIdx$id,fileIdx$file)
fileIdx <- fileIdx[!grepl('NA',names(fileIdx))]
fileIdx <- fileIdx[1:5]
for (i in 1:length(fileIdx)){
fn <- names(fileIdx)[i]
cat(sprintf('PROCESS: %s\n lines:%d',fnnlength(fileIdx[[i]])))
write.table(dt[fileIdx[[i]],],file = file.path(tDir,fn),row.names = F,col.names = F)
}
}
part_svrid('20140701')
for (i in 1:length(fileIdx)){
fn <- names(fileIdx)[i]
cat(sprintf('PROCESS: %s\n lines:%d',length(fileIdx[[i]])))
write.table(dt[fileIdx[[i]],],file = file.path(tDir,fn),row.names = F,col.names = F)
}
part_svrid('20140701')
part_svrid <- function(fname){
dt <- tryCatch(read.table(file.path(dDir,fname),header = F),error = function(e) NULL)
names(dt) <- c('date','svr_id','attr','timepoint','value')
if(is.null(dt))return(0)
fileIdx <- data.frame(id = seq_len(nrow(dt)),
file = paste(partSvrid$idx[match(dt$svr_id,partSvrid$svr_id)],fname,sep='-'))
fileIdx <- split(fileIdx$id,fileIdx$file)
fileIdx <- fileIdx[!grepl('NA',names(fileIdx))]
fileIdx <- fileIdx[1:5]
for (i in 1:length(fileIdx)){
fn <- names(fileIdx)[i]
cat(sprintf('PROCESS: %s\n lines:%d',length(fileIdx[[i]])))
write.table(dt[fileIdx[[i]],],file = file.path(tDir,fn),row.names = F,col.names = F)
}
}
part_svrid('20140701')
fname <- '20140701'
dt <- tryCatch(read.table(file.path(dDir,fname),header = F),error = function(e) NULL)
names(dt) <- c('date','svr_id','attr','timepoint','value')
if(is.null(dt))return(0)
fileIdx <- data.frame(id = seq_len(nrow(dt)),
file = paste(partSvrid$idx[match(dt$svr_id,partSvrid$svr_id)],fname,sep='-'))
fileIdx <- split(fileIdx$id,fileIdx$file)
fileIdx <- fileIdx[!grepl('NA',names(fileIdx))]
fileIdx <- fileIdx[1:5]
for (i in 1:length(fileIdx)){
fn <- names(fileIdx)[i]
cat(sprintf('PROCESS: %s\n lines:%d',fn,length(fileIdx[[i]])))
write.table(dt[fileIdx[[i]],],file = file.path(tDir,fn),row.names = F,col.names = F)
}
for (i in 1:length(fileIdx)){
fn <- names(fileIdx)[i]
cat(sprintf('PROCESS: %s\tlines:%d\n',fn,length(fileIdx[[i]])))
write.table(dt[fileIdx[[i]],],file = file.path(tDir,fn),row.names = F,col.names = F)
}
rm(list = ls())
source('head.R')
load(file.path(dir_data,'partIO.Rda'))
sDir <- file.path('/mnt/window/partSvrid')
tDir <- file.path('/mnt/window/mergePartSvrid')
fileName <- list.files(sDir)
fn <- unique(partSvrid$idx)
fn
fname <- fn[1]
fset <- sort(fileName[grepl(fname,fileName)])[1:10]
fset <- sort(fileName[grepl(fname,fileName)])[1:10]
2370/29751
2370/21900
250/6
250/60
# Merge svrid partition. Laura Ye send me on 09/02/2016
# Merge svrid partition based on file name.
rm(list = ls())
source('head.R')
load(file.path(dir_data,'partIO.Rda'))
sDir <- file.path(dir_data,'partSvrid')
tDir <- file.path(dir_data,'mergePartSvrid')
fileName <- list.files(sDir)
fileNamePre <- gsub('-.*','',fileName)
fn <- unique(partSvrid$idx)
fn <- fn[grepl('a|b|d',fn)]
fn
# Merge svrid partition. Laura Ye send me on 09/02/2016
# Merge svrid partition based on file name.
rm(list = ls())
source('head.R')
load(file.path(dir_data,'partIO.Rda'))
sDir <- file.path(dir_data,'partSvrid')
tDir <- file.path(dir_data,'mergePartSvrid')
fileName <- list.files(sDir)
fileNamePre <- gsub('-.*','',fileName)
Merge svrid partition based on file name.
rm(list = ls())
source('head.R')
load(file.path(dir_data,'partIO.Rda'))
sDir <- file.path(dir_data,'partSvrid')
tDir <- file.path(dir_data,'mergePartSvrid')
# sDir <- file.path('/mnt/window/partSvrid')
# tDir <- file.path('/mnt/window/mergePartSvrid')
fileName <- list.files(sDir)
fileNamePre <- gsub('-.*','',fileName)
# fn <- unique(partSvrid$idx)
# fn <- fn[grepl('a|b|d',fn)]
fn <- fn[grepl('a|b|d',fileName)]
fileNamePre
merge_file <- function(fname){
fset <- sort(fileName[fname == fileNamePre])[1:5]
# create file
dataset <- do.call(rbind,lapply(fset,function(f){
read.table(f,header = T)
}))
data <- dataset
}
fn
fileName <- list.files(sDir)
fileNamePre <- gsub('-.*','',fileName)
fn <- unique(fileNamePre)
fn <- fn[grepl('a|b|d',fn)]
fn
data <- merge_file('d1')
merge_file <- function(fname){
fset <- sort(fileName[fname == fileNamePre])[1:5]
# create file
dataset <- do.call(rbind,lapply(fset,function(f){
read.table(file.path(sDir,f),header = T)
}))
data <- dataset
}
data <- merge_file('d1')
fname <- 'd1'
fname <- 'd1'
fset <- sort(fileName[fname == fileNamePre])[1:5]
fset
f <- fset[1]
read.table(file.path(sDir,f),header = T)
fset <- sort(fileName[fname == fileNamePre])[1:3]
dataset <- do.call(rbind,lapply(fset,function(f){
read.table(file.path(sDir,f),header = T)
}))
merge_file <- function(fname){
fset <- sort(fileName[fname == fileNamePre])[1:3]
# create file
dataset <- do.call(rbind,lapply(fset,function(f){
read.table(file.path(sDir,f),header = F)
}))
data <- dataset
}
a <- merge_file['d1']
a <- merge_file('d1')
fname <- 'd1'
fset <- sort(fileName[fname == fileNamePre])[1:3]
dataset <- do.call(rbind,lapply(fset,function(f){
read.table(file.path(sDir,f),header = F)
}))
a <- read.table(file.path(sDir,fset[1]),header = F)
b <- read.table(file.path(sDir,fset[1]),header = F)
b <- read.table(file.path(sDir,fset[2\]),header = F)
b <- read.table(file.path(sDir,fset[2]),header = F)
fset[2]
b <- read.table(file.path(sDir,fset[2]),header = F)
b[nrow(b),]
b <- read.table(file.path(sDir,fset[2]),header = F,fill = F)
b <- read.table(file.path(sDir,fset[2]),header = F,fill = T)
a <- merge_file('d1')
summary(a)
merge_file <- function(fname){
fset <- sort(fileName[fname == fileNamePre])[1:3]
# create file
dataset <- do.call(rbind,lapply(fset,function(f){
read.table(file.path(sDir,f),header = F)
}))
names(dataset) <- c('date','svr_id','attrid','timepoint','value')
data <- subset(dataset,!is.na(value))
data
}
summary(a)
a <- merge_file('d1')
summary(a)
fname
source('~/Code/R/tencProcess/mergePartSvrid.R')
source('~/Code/R/tencProcess/mergePartSvrid.R')
source('~/Code/R/tencProcess/mergePartSvrid.R')
source('~/Code/R/tencProcess/mergePartSvrid.R')
rm(list = ls())
source('head.R')
load(file.path(dir_data,'partIO.Rda'))
sDir <- file.path(dir_data,'partSvrid')
tDir <- file.path(dir_data,'mergePartSvrid')
# sDir <- file.path('/mnt/window/partSvrid')
# tDir <- file.path('/mnt/window/mergePartSvrid')
fileName <- list.files(sDir)
fileNamePre <- gsub('-.*','',fileName)
fn <- unique(fileNamePre)
fn
# Merge svrid partition based on file name.
rm(list = ls())
source('head.R')
load(file.path(dir_data,'partIO.Rda'))
sDir <- file.path(dir_data,'partSvrid')
tDir <- file.path(dir_data,'mergePartSvrid')
# sDir <- file.path('/mnt/window/partSvrid')
# tDir <- file.path('/mnt/window/mergePartSvrid')
fileName <- list.files(sDir)
fileNamePre <- gsub('-.*','',fileName)
fn <- unique(fileNamePre)
fn
table(partSvrid$idx)
# Merge svrid partition. Laura Ye send me on 09/02/2016
# Merge svrid partition based on file name.
rm(list = ls())
source('head.R')
load(file.path(dir_data,'partIO.Rda'))
sDir <- file.path(dir_data,'partSvrid')
tDir <- file.path(dir_data,'mergePartSvrid')
# sDir <- file.path('/mnt/window/partSvrid')
# tDir <- file.path('/mnt/window/mergePartSvrid')
fileName <- list.files(sDir)
fileNamePre <- gsub('-.*','',fileName)
fn <- unique(fileNamePre)
fn <- fn[grepl('d',fn)]
fn
a <- file.info(file.path(sDir,fn))
sum(a$size)
View(a)
# Merge svrid partition. Laura Ye send me on 09/02/2016
# Merge svrid partition based on file name.
rm(list = ls())
source('head.R')
load(file.path(dir_data,'partIO.Rda'))
sDir <- file.path(dir_data,'partSvrid')
tDir <- file.path(dir_data,'mergePartSvrid')
# sDir <- file.path('/mnt/window/partSvrid')
# tDir <- file.path('/mnt/window/mergePartSvrid')
fileName <- list.files(sDir)
fileNamePre <- gsub('-.*','',fileName)
fn <- unique(fileNamePre)
fn <- fn[grepl('d',fn)]
file.path(sDir,fn)
a <- file.info(file.path(sDir,fileName[grepl('d',fileName)]))
View(a)
a <- file.info(file.path(sDir,fileName[grepl('d',fileName)]));sum(a$size)
a <- file.info(file.path(sDir,fileName[grepl('d',fileName)]));sum(a$size)
# Merge svrid partition based on file name.
rm(list = ls())
source('head.R')
load(file.path(dir_data,'partIO.Rda'))
sDir <- file.path(dir_data,'partSvrid')
tDir <- file.path(dir_data,'mergePartSvrid')
# sDir <- file.path('/mnt/window/partSvrid')
# tDir <- file.path('/mnt/window/mergePartSvrid')
fileName <- list.files(sDir)
fileNamePre <- gsub('-.*','',fileName)
fn <- unique(fileNamePre)
fn <- fn[grepl('d',fn)]
fn
rm(list = ls())
source('head.R')
load(file.path(dir_data,'staIO.Rda'))
load(file.path(dir_data,'staIOAllFile.Rda'))
# svrid partition setting. Laura Ye send me on 09/02/2016
# Partion svrid based on number of attr of iops and the count of items.
rm(list = ls())
source('head.R')
load(file.path(dir_data,'staIOAllFile.Rda'))
days <- length(staIO)
a <- lapply(staIO,nrow)
unlist(a)
max(unlist(a))
load(file.path(dir_data,'staIO.Rda'))
max(unlist(lapply(staIO,nrow)))
# svrid partition setting. Laura Ye send me on 09/02/2016
# Partion svrid based on number of attr of iops and the count of items.
rm(list = ls())
source('head.R')
load(file.path(dir_data,'staIOAllFile.Rda'))
# load(file.path(dir_data,'staIO.Rda'))
days <- length(staIO)
lenIOPS <- data.frame(svr_id = 1:22393)
for(i in 1:length(staIO)){
x <- staIO[[i]]
lenIOPS[[as.character(x$date[i])]] <- x$len_iops[match(lenIOPS$svr_id,x$svr_id)]
}
staIO <- staIO[!(names(staIO) %in% c('20141027','20150507'))]
load(file.path(dir_data,'staIOAllFile.Rda'))
names(staIO)
names(staIO)
a <- lapply(staIO,function(x)is.data.frame(x))
a
sum(a)
sum(unlist(a))
staIO <- staIO[unlist(tapply(staIO,is.data.frame))]
unlist(tapply(staIO,is.data.frame))
staIO <- staIO[unlist(lapply(staIO,is.data.frame))]
# load(file.path(dir_data,'staIO.Rda'))
days <- length(staIO)
####################################
# S1.merge
lenIOPS <- data.frame(svr_id = 1:22393)
for(i in 1:length(staIO)){
x <- staIO[[i]]
lenIOPS[[as.character(x$date[i])]] <- x$len_iops[match(lenIOPS$svr_id,x$svr_id)]
}
lenIOPS$maxLenIOPS <- apply(lenIOPS[,2:(days + 1)],1,function(x)max(x,na.rm = T))
View(lenIOPS)
lenItem <- data.frame(svr_id = 1:22393)
for(i in 1:length(staIO)){
x <- staIO[[i]]
lenItem[[as.character(x$date[i])]] <- x$len_data[match(lenItem$svr_id,x$svr_id)]
}
lenItem$maxLenItem <- apply(lenItem[,2:(days + 1)],1,function(x)max(x,na.rm = T))
lenItem$countItemPerDay <- apply(lenItem[,2:(days + 1)],1,function(x)sum(x,na.rm = T))/days
# S2.filter some server
lenSvrid <- merge(lenIOPS[,c('svr_id','maxLenIOPS')],lenItem[,c('svr_id','maxLenItem','countItemPerDay')],by = 'svr_id')
lenSvrid <- subset(lenSvrid,maxLenIOPS != -Inf)
lenSvrid$avgNumAttr <- lenSvrid$maxLenItem/(lenSvrid$maxLenIOPS + 3)
# S3.partition
part <- list2df(tapply(lenSvrid$countItemPerDay,lenSvrid$maxLenIOPS,function(x){list(mean(x),length(x))}),names = c('numPerDay','count','lenIOPS'))
part$svrNum <- 2.5e8/part$numPerDay/365
part$svrNum <- ceiling(part$svrNum/10)*10
part$fileNum <- floor(part$count/part$svrNum)
diskNumNeed <- c(0,4,6,24,26,48)
View(part)
part <- list2df(tapply(lenSvrid$countItemPerDay,lenSvrid$maxLenIOPS,function(x){list(mean(x),length(x))}),names = c('numPerDay','count','lenIOPS'))
part$svrNum <- 2.5e8/part$numPerDay/365
part$fileNum <- floor(part$count/part$svrNum)
part$svrNum <- round(2.5e8/part$numPerDay/365)
part <- list2df(tapply(lenSvrid$countItemPerDay,lenSvrid$maxLenIOPS,function(x){list(mean(x),length(x))}),names = c('numPerDay','count','lenIOPS'))
part$svrNum <- round(1.5e8/part$numPerDay/365)
part$fileNum <- floor(part$count/part$svrNum)
part$svrNum <- round(1.5e8/part$numPerDay/365)
part$fileNum <- round(part$count/part$svrNum)
source('~/Code/R/tencProcess/partSetting.R')
View(lenSvridA)
table(lenSvridA$idx)
source('~/Code/R/tencProcess/partSetting.R')
table(lenSvridA$idx)
table(lenSvridB$idx)
table(partSvrid$idx)
a <- table(partSvrid$idx)
require(doParallel)
detectCores()
detectCores()*.9
# svrid partition. Laura Ye send me on 09/02/2016
# Partion svrid.
rm(list = ls())
source('head.R')
load(file.path(dir_data,'partIO.Rda'))
dDir <- file.path(dir_data,'compIO')
fileName <- list.files(dDir)
tDir <- file.path('/mnt/window/partSvrid')
View(partSvrid)
table(partSvrid$idx)
partSvrid <- subset(partSvrid,grepl('a|b|d',idx))
